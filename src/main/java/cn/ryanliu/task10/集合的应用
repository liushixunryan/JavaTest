1.集合框架:
    (P.S:此处应该有:集合接口层次框架图)
    集合中的各个接口:
        (1);Collection:定义了存取一组对象的方法,子接口Set和List分别定义了存储方式;
        (2):Set:元素没有次序,不允许重复;
        (3):SortedSet:和Set接口相同,但集合中的元素按升序排列;
        (4):List:元素按顺序加载和移出,允许重复;
        (5):Map:以键值(key - value)对方式存放两个对应的元素.无放入顺序,key不能重复,value可以重复;
        (6):SortedMap:和Map相同,但集合中的元素按键值的升序排列
    集合通过这些接口能实现8个类(P.S:此处有集合类框架图)

    集合的8个实现类:
        (1).LinkedList:增删快,查找慢,多用于插入和删除.
        (2).ArrayList:效率高,不支持并发,多用于查询
        (3).Vector:效率低,线程安全,多用于查询
        (4).HashSet:存储效率高,查询效率低
        (5).TreeSet:存储效率低,查询效率高
        (6).HashMap:元素以键值对方式保存,效率高,不支持并行,允许空值
        (7).HashTable:元素以键值对方式保存,线程安全,不被允许空值
        (8).TreeMap:元素以键值对方式保存,不支持并行,不被允许空值

2.HashSet散列表:
    HashSet就是散列表,是集合中的一种重要的实现类,它是底层实现还是数组.HashSet按照哈希算法计算出哈希码作为存取和比较的依据,
    具有很好的存取和查找功能.当向集合中存储对象时需要先生成哈希码.若生成的哈希码与已有对象的哈希码相同,则调用equals()方法
    将两个对象进行比较;若哈希码不相等则根据哈希码在集合中查找相应的位置来存储对象.HashSet中的元素按哈希码顺序排列.
        HashSet的构造方法如下:
            HashSet()                           //构造一个新的空set,默认初始容量是16,加载因子是0.75
            HashSet(int initialCapacity)        //构造一个新的空set,指定初始容量,加载因子是0.75
            HashSet(int initialCapacity , float loadFactor)     //构造一个新的空set,指定初始容量和加载因子

        HashSet的存储原理和覆盖hashCode()方法的原则如下:
            (1).一定要让equals()相等的对象返回相同的哈希码,尽量让equals()不相等的对象返回不同的哈希码
            (2).尽量让对象的哈希码值随机散列,即平均散列.避免集中到某段范围,影响效率.尽量不要用加减,可以用 ^
            (3).要将equals()和hashCode()两种方法同时覆盖,才能在HashSet过滤掉相等的对象